#include <func.h>

void *pthreadFunc(void *p)
{
    printf("child thread\n");
}

int main()
{
    pthread_t pthid;
    int ret=pthread_create(&pthid,NULL,pthreadFunc,NULL);
    if(-1==ret)
    {
        printf("fail to pthread_create\n");
        return -1;
    }
    int iRet=0;
    pthread_cancel(pthid);
    ret=pthread_join(pthid,(void**)&iRet);
    if(ret!=0)
    {
        printf("fail to pthread_join\n");
        return -1;
    }
    printf("main thread: chile thread exit value is %d\n",iRet);
    return 0;
}

#include <func.h>

void *pthreadFunc(void *p)
{
    printf("child thread: %d\n",*(int*)p);
    pthread_exit((void*)2);
}

int main()
{
    pthread_t pthid;
    int iArg=1;
    int ret=pthread_create(&pthid,NULL,pthreadFunc,&iArg);
    if(-1==ret)
    {
        printf("fail to pthread_create\n");
        return -1;
    }
    int iRet=0;
    ret=pthread_join(pthid,(void**)&iRet);
    if(ret!=0)
    {
        printf("fail to pthread_join\n");
        return -1;
    }
    printf("main thread: chile thread exit value is %d\n",iRet);
    return 0;
}

#include <func.h>

void sigfunc(int sigNum)
{
    time_t now;
    now=time(NULL);
    printf("%s\n",ctime(&now));
}

int main()
{
    signal(SIGPROF,sigfunc);
    sigfunc(0); 
    struct itimerval t;
    memset(&t,0,sizeof(t));
    t.it_value.tv_sec=3;
    t.it_interval.tv_sec=2;
    int ret=setitimer(ITIMER_PROF,&t,NULL);
    if(-1==ret)
    {
        perror("setitimer");
        return -1;
    }
    sleep(5);
    while(1);
    return 0;
}

#include <func.h>

void sigfunc(int sigNum)
{
    time_t now;
    now=time(NULL);
    printf("%s\n",ctime(&now));
}

int main()
{
    signal(SIGALRM,sigfunc);
    sigfunc(0); 
    struct itimerval t;
    memset(&t,0,sizeof(t));
    t.it_value.tv_sec=3;
    t.it_interval.tv_sec=2;
    int ret=setitimer(ITIMER_REAL,&t,NULL);
    if(-1==ret)
    {
        perror("setitimer");
        return -1;
    }
    char buf[128]={0};
    read(STDIN_FILENO,buf,sizeof(buf));
    return 0;
}

#include <func.h>

void sigfunc(int sigNum)
{
    time_t now;
    now=time(NULL);
    printf("%s\n",ctime(&now));
}

int main()
{
    signal(SIGVTALRM,sigfunc);
    sigfunc(0); 
    struct itimerval t;
    memset(&t,0,sizeof(t));
    t.it_value.tv_sec=3;
    t.it_interval.tv_sec=2;
    int ret=setitimer(ITIMER_VIRTUAL,&t,NULL);
    if(-1==ret)
    {
        perror("setitimer");
        return -1;
    }
    sleep(5);
    while(1);
    return 0;
}

