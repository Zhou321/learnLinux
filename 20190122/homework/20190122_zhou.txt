#include "func.h"

void daemon1()
{
	int i=0;
	// exit the parent process
	if(fork()){
		exit(0);
	}
	printf("pid=%d\n",getpid());
	setsid();
	chdir("/");
	umask(0);
	for(;i<3;i++){
		close(i);
	}
}

int main()
{
	daemon1();
	FILE *fp = fopen("/tmp/log","wb+");
	while(1)
	{
		fputs("I have sleep 1s\n",fp);
		sleep(1);
	}
	return 0;
}

#include "func.h"

int main()
{
	int ret = fork();
	if(!ret)
	{
		printf("son uid=%d\n",getpid());
		while(1);
	}else{
		printf("parent uid=%d\n",getpid());
		while(1);
	}
	return 0;
}
#include "func.h"

int main()
{
	int ret = fork();
	if(!ret)
	{
		printf("son uid=%d\n",getpid());
		while(1);
	}else{
		printf("parent uid=%d\n",getpid());
		exit(0);
	}
	return 0;
}
#include "func.h"

int main()
{
	int ret = fork();
	if(!ret)
	{
		printf("son gid=%d\n",getpid());
		exit(0);
	}else{
		printf("parent gid=%d\n",getpid());
		int pid = wait(NULL);
		printf("return son pid=%d\n",pid);
	}
	return 0;
}
#include "func.h"

int main()
{
	int ret = fork();
	if(!ret)
	{
		printf("son uid=%d\n",getpid());
		exit(0);
	}else{
		printf("parent uid=%d\n",getpid());
		while(1);
	}
	return 0;
}
