#include <func.h>

#define N 1000000000

int main()
{
	int shmid = shmget(1000,4600,IPC_CREAT|0600);
	if(-1==shmid)
	{
		perror("shmget");
		return -1;
	}
	int *p = (int*)shmat(shmid,NULL,0);
	if((int *)-1==p)
	{
		perror("shmat");
		return -1;
	}
	p[0]=0;
	int i=0;
	if(!fork())
	{
		for(;i<N;i++)
		{
			p[0]+=1;
		}
	}else{
		for(;i<N;i++)
		{
			p[0]+=1;
		}
		wait(NULL);
		printf("p[0]=%d\n",p[0]);
	}
	return 0;
}

#include <func.h>

int main()
{
	int fds[2];
	int ret = pipe(fds);
	char buf[128]={0};
	if(!fork())
	{
		close(fds[0]);
		strcpy(buf,"hello");
		write(fds[1],buf,5);
	}else{
		close(fds[1]);
		read(fds[0],buf,5);
		printf("parent output:%s\n",buf);
	}
}
#include <func.h>

int main()
{
	int shmid = shmget(1000,4096,IPC_CREAT|0600);
	if(-1==shmid)
	{
		perror("shmget failed");
		return -1;
	}
	char *p = (char *)shmat(shmid,NULL,0);
	if((char *)-1==p)
	{
		perror("shmat failed");
		return -1;
	}
	if(!fork())
	{
		printf("son process:\n");
		puts(p);
	}else{
		strcpy(p,"How are you");
		wait(NULL);
	}
}
